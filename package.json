{
  "name": "linter-markdown",
  "main": "lib/index.js",
  "version": "5.2.11",
  "description": "Lint markdown on the fly, using remark-lint",
  "scripts": {
    "lint": "remark README.md LICENSE.md && eslint lib spec",
    "test": "apm test"
  },
  "keywords": [
    "lint",
    "linter",
    "remark",
    "remark-lint",
    "markdown"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/AtomLinter/linter-markdown.git"
  },
  "license": "MIT",
  "engines": {
    "atom": ">=1.7.0 <2.0.0"
  },
  "package-deps": [
    "linter"
  ],
  "dependencies": {
    "atom-package-deps": "5.1.0",
    "remark": "11.0.2",
    "remark-frontmatter": "1.3.2",
    "remark-preset-lint-consistent": "2.0.3",
    "remark-preset-lint-markdown-style-guide": "2.1.3",
    "remark-preset-lint-recommended": "3.0.3",
    "unified-engine-atom": "8.0.0"
  },
  "devDependencies": {
    "@commitlint/cli": "8.3.5",
    "@commitlint/config-conventional": "8.3.4",
    "@commitlint/travis-cli": "8.3.5",
    "@semantic-release/apm-config": "8.0.0",
    "eslint": "6.8.0",
    "eslint-config-airbnb-base": "14.0.0",
    "eslint-plugin-import": "2.20.1",
    "husky": "4.2.3",
    "jasmine-fix": "1.3.1",
    "remark-cli": "7.0.1",
    "semantic-release": "17.0.6"
  },
  "eslintConfig": {
    "rules": {
      "comma-dangle": [
        "error",
        "never"
      ],
      "global-require": "off",
      "no-console": "off",
      "import/no-unresolved": [
        "error",
        {
          "ignore": [
            "atom"
          ]
        }
      ]
    },
    "extends": "airbnb-base",
    "globals": {
      "atom": true
    },
    "env": {
      "node": true,
      "browser": true
    }
  },
  "providedServices": {
    "linter": {
      "versions": {
        "2.0.0": "provideLinter"
      }
    }
  },
  "configSchema": {
    "detectIgnore": {
      "title": "Ignore files",
      "description": "Use `.remarkignore` files.",
      "type": "boolean",
      "default": true
    },
    "yamlWithoutConfig": {
      "title": "Support YAML frontmatter",
      "description": "Support YAML [frontmatter](https://github.com/wooorm/remark-frontmatter) if no **remark-lint** config is found.",
      "type": "boolean",
      "default": true
    },
    "presetRecommendedWithoutConfig": {
      "title": "Bug-free by default",
      "description": "Use [remark-preset-lint-recommended](https://github.com/wooorm/remark-lint/tree/master/packages/remark-preset-lint-recommended) if no **remark-lint** config is found.",
      "type": "boolean",
      "default": true
    },
    "presetConsistentWithoutConfig": {
      "title": "Consistency by default",
      "description": "Use [remark-preset-lint-consistent](https://github.com/wooorm/remark-lint/tree/master/packages/remark-preset-lint-consistent) if no **remark-lint** config is found.",
      "type": "boolean",
      "default": true
    },
    "presetStyleGuideWithoutConfig": {
      "title": "Strict markdown style guide by default",
      "description": "Use [remark-preset-lint-markdown-style-guide](https://github.com/wooorm/remark-lint/tree/master/packages/remark-preset-lint-markdown-style-guide) if no **remark-lint** config is found.",
      "type": "boolean",
      "default": false
    },
    "scopes": {
      "title": "Scopes",
      "description": "List of scopes for languages which will be checked (run `Editor: Log Cursor Scope` to determine the scopes for a file).",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "source.gfm",
        "source.pfm",
        "text.md"
      ]
    }
  },
  "renovate": {
    "extends": [
      "config:base"
    ],
    "semanticCommits": true,
    "rangeStrategy": "pin",
    "packageRules": [
      {
        "packagePatterns": [
          "^eslint"
        ],
        "groupName": "ESLint packages"
      },
      {
        "packagePatterns": [
          "^remark"
        ],
        "groupName": "Remark packages"
      }
    ]
  },
  "release": {
    "extends": "@semantic-release/apm-config"
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  }
}
